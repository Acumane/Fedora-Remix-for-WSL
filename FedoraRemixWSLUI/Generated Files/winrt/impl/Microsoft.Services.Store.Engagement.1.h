// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Microsoft_Services_Store_Engagement_1_H
#define WINRT_Microsoft_Services_Store_Engagement_1_H
#include "winrt/impl/Microsoft.Services.Store.Engagement.0.h"
WINRT_EXPORT namespace winrt::Microsoft::Services::Store::Engagement
{
    struct __declspec(empty_bases) IStoreServicesCustomEventLogger :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStoreServicesCustomEventLogger>
    {
        IStoreServicesCustomEventLogger(std::nullptr_t = nullptr) noexcept {}
        IStoreServicesCustomEventLogger(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStoreServicesCustomEventLogger(IStoreServicesCustomEventLogger const&) noexcept = default;
        IStoreServicesCustomEventLogger(IStoreServicesCustomEventLogger&&) noexcept = default;
        IStoreServicesCustomEventLogger& operator=(IStoreServicesCustomEventLogger const&) & noexcept = default;
        IStoreServicesCustomEventLogger& operator=(IStoreServicesCustomEventLogger&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStoreServicesCustomEventLoggerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStoreServicesCustomEventLoggerStatics>
    {
        IStoreServicesCustomEventLoggerStatics(std::nullptr_t = nullptr) noexcept {}
        IStoreServicesCustomEventLoggerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStoreServicesCustomEventLoggerStatics(IStoreServicesCustomEventLoggerStatics const&) noexcept = default;
        IStoreServicesCustomEventLoggerStatics(IStoreServicesCustomEventLoggerStatics&&) noexcept = default;
        IStoreServicesCustomEventLoggerStatics& operator=(IStoreServicesCustomEventLoggerStatics const&) & noexcept = default;
        IStoreServicesCustomEventLoggerStatics& operator=(IStoreServicesCustomEventLoggerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStoreServicesEngagementManager :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStoreServicesEngagementManager>
    {
        IStoreServicesEngagementManager(std::nullptr_t = nullptr) noexcept {}
        IStoreServicesEngagementManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStoreServicesEngagementManager(IStoreServicesEngagementManager const&) noexcept = default;
        IStoreServicesEngagementManager(IStoreServicesEngagementManager&&) noexcept = default;
        IStoreServicesEngagementManager& operator=(IStoreServicesEngagementManager const&) & noexcept = default;
        IStoreServicesEngagementManager& operator=(IStoreServicesEngagementManager&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStoreServicesEngagementManager2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStoreServicesEngagementManager2>
    {
        IStoreServicesEngagementManager2(std::nullptr_t = nullptr) noexcept {}
        IStoreServicesEngagementManager2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStoreServicesEngagementManager2(IStoreServicesEngagementManager2 const&) noexcept = default;
        IStoreServicesEngagementManager2(IStoreServicesEngagementManager2&&) noexcept = default;
        IStoreServicesEngagementManager2& operator=(IStoreServicesEngagementManager2 const&) & noexcept = default;
        IStoreServicesEngagementManager2& operator=(IStoreServicesEngagementManager2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStoreServicesEngagementManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStoreServicesEngagementManagerStatics>
    {
        IStoreServicesEngagementManagerStatics(std::nullptr_t = nullptr) noexcept {}
        IStoreServicesEngagementManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStoreServicesEngagementManagerStatics(IStoreServicesEngagementManagerStatics const&) noexcept = default;
        IStoreServicesEngagementManagerStatics(IStoreServicesEngagementManagerStatics&&) noexcept = default;
        IStoreServicesEngagementManagerStatics& operator=(IStoreServicesEngagementManagerStatics const&) & noexcept = default;
        IStoreServicesEngagementManagerStatics& operator=(IStoreServicesEngagementManagerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStoreServicesExperimentVariation :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStoreServicesExperimentVariation>
    {
        IStoreServicesExperimentVariation(std::nullptr_t = nullptr) noexcept {}
        IStoreServicesExperimentVariation(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStoreServicesExperimentVariation(IStoreServicesExperimentVariation const&) noexcept = default;
        IStoreServicesExperimentVariation(IStoreServicesExperimentVariation&&) noexcept = default;
        IStoreServicesExperimentVariation& operator=(IStoreServicesExperimentVariation const&) & noexcept = default;
        IStoreServicesExperimentVariation& operator=(IStoreServicesExperimentVariation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStoreServicesExperimentVariationResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStoreServicesExperimentVariationResult>
    {
        IStoreServicesExperimentVariationResult(std::nullptr_t = nullptr) noexcept {}
        IStoreServicesExperimentVariationResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStoreServicesExperimentVariationResult(IStoreServicesExperimentVariationResult const&) noexcept = default;
        IStoreServicesExperimentVariationResult(IStoreServicesExperimentVariationResult&&) noexcept = default;
        IStoreServicesExperimentVariationResult& operator=(IStoreServicesExperimentVariationResult const&) & noexcept = default;
        IStoreServicesExperimentVariationResult& operator=(IStoreServicesExperimentVariationResult&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStoreServicesExperimentVariationStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStoreServicesExperimentVariationStatics>
    {
        IStoreServicesExperimentVariationStatics(std::nullptr_t = nullptr) noexcept {}
        IStoreServicesExperimentVariationStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStoreServicesExperimentVariationStatics(IStoreServicesExperimentVariationStatics const&) noexcept = default;
        IStoreServicesExperimentVariationStatics(IStoreServicesExperimentVariationStatics&&) noexcept = default;
        IStoreServicesExperimentVariationStatics& operator=(IStoreServicesExperimentVariationStatics const&) & noexcept = default;
        IStoreServicesExperimentVariationStatics& operator=(IStoreServicesExperimentVariationStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStoreServicesFeedbackLauncher :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStoreServicesFeedbackLauncher>
    {
        IStoreServicesFeedbackLauncher(std::nullptr_t = nullptr) noexcept {}
        IStoreServicesFeedbackLauncher(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStoreServicesFeedbackLauncher(IStoreServicesFeedbackLauncher const&) noexcept = default;
        IStoreServicesFeedbackLauncher(IStoreServicesFeedbackLauncher&&) noexcept = default;
        IStoreServicesFeedbackLauncher& operator=(IStoreServicesFeedbackLauncher const&) & noexcept = default;
        IStoreServicesFeedbackLauncher& operator=(IStoreServicesFeedbackLauncher&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStoreServicesFeedbackLauncherStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStoreServicesFeedbackLauncherStatics>
    {
        IStoreServicesFeedbackLauncherStatics(std::nullptr_t = nullptr) noexcept {}
        IStoreServicesFeedbackLauncherStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStoreServicesFeedbackLauncherStatics(IStoreServicesFeedbackLauncherStatics const&) noexcept = default;
        IStoreServicesFeedbackLauncherStatics(IStoreServicesFeedbackLauncherStatics&&) noexcept = default;
        IStoreServicesFeedbackLauncherStatics& operator=(IStoreServicesFeedbackLauncherStatics const&) & noexcept = default;
        IStoreServicesFeedbackLauncherStatics& operator=(IStoreServicesFeedbackLauncherStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStoreServicesNotificationChannelParameters :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStoreServicesNotificationChannelParameters>
    {
        IStoreServicesNotificationChannelParameters(std::nullptr_t = nullptr) noexcept {}
        IStoreServicesNotificationChannelParameters(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStoreServicesNotificationChannelParameters(IStoreServicesNotificationChannelParameters const&) noexcept = default;
        IStoreServicesNotificationChannelParameters(IStoreServicesNotificationChannelParameters&&) noexcept = default;
        IStoreServicesNotificationChannelParameters& operator=(IStoreServicesNotificationChannelParameters const&) & noexcept = default;
        IStoreServicesNotificationChannelParameters& operator=(IStoreServicesNotificationChannelParameters&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStoreServicesNotificationChannelRegistrationResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStoreServicesNotificationChannelRegistrationResult>
    {
        IStoreServicesNotificationChannelRegistrationResult(std::nullptr_t = nullptr) noexcept {}
        IStoreServicesNotificationChannelRegistrationResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStoreServicesNotificationChannelRegistrationResult(IStoreServicesNotificationChannelRegistrationResult const&) noexcept = default;
        IStoreServicesNotificationChannelRegistrationResult(IStoreServicesNotificationChannelRegistrationResult&&) noexcept = default;
        IStoreServicesNotificationChannelRegistrationResult& operator=(IStoreServicesNotificationChannelRegistrationResult const&) & noexcept = default;
        IStoreServicesNotificationChannelRegistrationResult& operator=(IStoreServicesNotificationChannelRegistrationResult&&) & noexcept = default;
    };
}
#endif
